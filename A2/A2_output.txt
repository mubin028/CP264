------------------------------
Testing Task 1:

------------------------------
Testing is_identity
------------------------------

Case 1: Empty Matrix:
create Empty Matrix
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
is_identity = 0

Case 2: I1:
set first element to 1
1    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
is_identity = 1

Case 3: invalid I1:
set first element to 0
0    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
is_identity = 0

Case 4: I2:
use global matrix (i2)
1    0    -    -    -    -    -    -    -    -    
0    1    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
is_identity = 1

Case 5: I3:
use global matrix (i3)
1    0    0    -    -    -    -    -    -    -    
0    1    0    -    -    -    -    -    -    -    
0    0    1    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
is_identity = 1

Case 6: invalid I3:
Modify last identity matrix
1    0    0    -    -    -    -    -    -    -    
0    1    0    -    -    -    -    -    -    -    
0    0    2    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
is_identity = 0


------------------------------
Testing is_unique
------------------------------

Case 1: Empty Matrix:
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
is_unique = 0

Case 2: Single Element Matrix:
8    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
is_unique = 1

Case 3: Unique Vector:
8    6    4    2    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
is_unique = 1

Case 4: Non-unique Vector:
8    6    4    2    8    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
is_unique = 0

Case 5: Invalid Matrix:
8    6    4    2    8    -    -    -    -    -    
5    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
is_unique = 0
--------------------

Case 6: Full Unique Matrix:
1    2    3    4    5    6    7    8    9    10   
11   12   13   14   15   16   17   18   19   20   
21   22   23   24   25   26   27   28   29   30   
31   32   33   34   35   36   37   38   39   40   
41   42   43   44   45   46   47   48   49   50   
51   52   53   54   55   56   57   58   59   60   
61   62   63   64   65   66   67   68   69   70   
71   72   73   74   75   76   77   78   79   80   
81   82   83   84   85   86   87   88   89   90   
91   92   93   94   95   96   97   98   99   100  
is_unique = 1

Case 7: Full Non-Unique Matrix:
1    2    3    4    5    6    7    8    9    10   
11   12   13   14   15   16   17   18   19   100  
21   22   23   24   25   26   27   28   29   30   
31   32   33   34   35   36   37   38   39   40   
41   42   43   44   45   46   47   48   49   50   
51   52   53   54   55   56   57   58   59   60   
61   62   63   64   65   66   67   68   69   70   
71   72   73   74   75   76   77   78   79   80   
81   82   83   84   85   86   87   88   89   90   
91   92   93   94   95   96   97   98   99   100  
is_unique = 0

------------------------------
Testing is_uniform
------------------------------

Case 1: Empty Matrix:
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
is_uniform = 0

Case 2: Single Element Matrix:
5    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
is_uniform = 1

Case 3: Uniform Vector:
5    5    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
is_uniform = 1

Case 4: Invalid Matrix:
5    5    -    -    -    -    -    -    -    -    
5    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
is_uniform = 0

Case 5: Uniform Square Matrix 2x2
5    5    -    -    -    -    -    -    -    -    
5    5    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
is_uniform = 1

Case 6: Uniform non-square Matrix 2x3
5    5    5    -    -    -    -    -    -    -    
5    5    5    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
is_uniform = 1

Case 7: Non uniform 2x3 matrix
5    5    8    -    -    -    -    -    -    -    
5    5    5    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
is_uniform = 0

End of Task 1 Testing

------------------------------
------------------------------
Testing Task 2:

Case 0:
-    -    -    -    -    
-    10   -    -    -    
-    -    -    -    -    
-    -    -    -    -    
-    -    -    -    -    
Classification by size = -1
Classification by content = -1
invalid matrix

Case 1:
-    -    -    -    -    
-    -    -    -    -    
-    -    -    -    -    
-    -    -    -    -    
-    -    -    -    -    
Classification by size = 0
Classification by content = 0
empty matrix

Case 2:
1    -    -    -    -    
-    -    -    -    -    
-    -    -    -    -    
-    -    -    -    -    
-    -    -    -    -    
Classification by size = 1
Classification by content = 1
identity vector matrix

Case 3:
8    6    4    2    -    
-    -    -    -    -    
-    -    -    -    -    
-    -    -    -    -    
-    -    -    -    -    
Classification by size = 1
Classification by content = 2
unique vector matrix

Case 4:
5    -    -    -    -    
5    -    -    -    -    
5    -    -    -    -    
-    -    -    -    -    
-    -    -    -    -    
Classification by size = 1
Classification by content = 3
uniform vector matrix

Case 5:
14   15   -3   15   -    
-    -    -    -    -    
-    -    -    -    -    
-    -    -    -    -    
-    -    -    -    -    
Classification by size = 1
Classification by content = 4
undefined vector matrix

Case 6:
1    0    0    -    -    
0    1    0    -    -    
0    0    1    -    -    
-    -    -    -    -    
-    -    -    -    -    
Classification by size = 2
Classification by content = 1
identity square matrix

Case 7:
6    6    6    -    -    
6    6    6    -    -    
6    6    6    -    -    
-    -    -    -    -    
-    -    -    -    -    
Classification by size = 2
Classification by content = 3
uniform square matrix

Case 8:
14   15   -    -    -    
24   25   -    -    -    
-    -    -    -    -    
-    -    -    -    -    
-    -    -    -    -    
Classification by size = 2
Classification by content = 2
unique square matrix

Case 9:
1    0    0    -    -    
0    1    0    -    -    
0    0    2    -    -    
-    -    -    -    -    
-    -    -    -    -    
Classification by size = 2
Classification by content = 4
undefined square matrix

Case 10:
5    5    5    -    -    
5    5    5    -    -    
5    5    5    -    -    
5    5    5    -    -    
-    -    -    -    -    
Classification by size = 3
Classification by content = 3
uniform rectangle matrix

Case 11:
5    6    7    -    -    
1    3    4    -    -    
-    -    -    -    -    
-    -    -    -    -    
-    -    -    -    -    
Classification by size = 3
Classification by content = 2
unique rectangle matrix

Case 12:
5    6    7    -    -    
1    3    7    -    -    
-    -    -    -    -    
-    -    -    -    -    
-    -    -    -    -    
Classification by size = 3
Classification by content = 4
undefined rectangle matrix

End of Task 2 Testing

------------------------------
------------------------------
Testing Task 3: fill_triangle

Error cases:
Error(fill_triangle): invalid length
Error(fill_triangle): invalid length
Error(fill_triangle): invalid corner
Error(fill_triangle): invalid side

fill_triangle(2,T,L,10):
10   10   
10   0    

fill_triangle(3,T,L,5):
5    5    5    
5    5    0    
5    0    0    

fill_triangle(4,T,R,2):
2    2    2    2    
0    2    2    2    
0    0    2    2    
0    0    0    2    

fill_triangle(5,T,R,-6):
-6   -6   -6   -6   -6   
0    -6   -6   -6   -6   
0    0    -6   -6   -6   
0    0    0    -6   -6   
0    0    0    0    -6   

fill_triangle(6,B,L,1):
1    0    0    0    0    0    
1    1    0    0    0    0    
1    1    1    0    0    0    
1    1    1    1    0    0    
1    1    1    1    1    0    
1    1    1    1    1    1    

fill_triangle(7,B,L,7):
7    0    0    0    0    0    0    
7    7    0    0    0    0    0    
7    7    7    0    0    0    0    
7    7    7    7    0    0    0    
7    7    7    7    7    0    0    
7    7    7    7    7    7    0    
7    7    7    7    7    7    7    

fill_triangle(8,B,R,3):
0    0    0    0    0    0    0    3    
0    0    0    0    0    0    3    3    
0    0    0    0    0    3    3    3    
0    0    0    0    3    3    3    3    
0    0    0    3    3    3    3    3    
0    0    3    3    3    3    3    3    
0    3    3    3    3    3    3    3    
3    3    3    3    3    3    3    3    

fill_triangle(9,B,R,4):
0    0    0    0    0    0    0    0    4    
0    0    0    0    0    0    0    4    4    
0    0    0    0    0    0    4    4    4    
0    0    0    0    0    4    4    4    4    
0    0    0    0    4    4    4    4    4    
0    0    0    4    4    4    4    4    4    
0    0    4    4    4    4    4    4    4    
0    4    4    4    4    4    4    4    4    
4    4    4    4    4    4    4    4    4    

End of Task 3 Testing

------------------------------
------------------------------
Testing Task 4: flip

Case 0:
Before:
-    -    -    
-    0    -    
-    -    -    
Error(flip): invalid matrix
Flip horizontal:
-    -    -    
-    0    -    
-    -    -    
Error(flip): invalid matrix
Flip vertical:
-    -    -    
-    0    -    
-    -    -    

Case 1:
Before:
-    -    -    -    
-    -    -    -    
-    -    -    -    
-    -    -    -    
Flip horizontal:
-    -    -    -    
-    -    -    -    
-    -    -    -    
-    -    -    -    
Flip vertical:
-    -    -    -    
-    -    -    -    
-    -    -    -    
-    -    -    -    

Case 2:
Before:
1    0    0    
0    1    0    
0    0    1    
Flip horizontal:
0    0    1    
0    1    0    
1    0    0    
Flip vertical:
1    0    0    
0    1    0    
0    0    1    

Case 3:
Before:
1    2    3    4    5    6    7    8    9    10   
1    2    3    4    5    6    7    8    9    10   
1    2    3    4    5    6    7    8    9    10   
1    2    3    4    5    6    7    8    9    10   
1    2    3    4    5    6    7    8    9    10   
1    2    3    4    5    6    7    8    9    10   
1    2    3    4    5    6    7    8    9    10   
1    2    3    4    5    6    7    8    9    10   
1    2    3    4    5    6    7    8    9    10   
1    2    3    4    5    6    7    8    9    10   
Flip horizontal:
1    2    3    4    5    6    7    8    9    10   
1    2    3    4    5    6    7    8    9    10   
1    2    3    4    5    6    7    8    9    10   
1    2    3    4    5    6    7    8    9    10   
1    2    3    4    5    6    7    8    9    10   
1    2    3    4    5    6    7    8    9    10   
1    2    3    4    5    6    7    8    9    10   
1    2    3    4    5    6    7    8    9    10   
1    2    3    4    5    6    7    8    9    10   
1    2    3    4    5    6    7    8    9    10   
Flip vertical:
10   9    8    7    6    5    4    3    2    1    
10   9    8    7    6    5    4    3    2    1    
10   9    8    7    6    5    4    3    2    1    
10   9    8    7    6    5    4    3    2    1    
10   9    8    7    6    5    4    3    2    1    
10   9    8    7    6    5    4    3    2    1    
10   9    8    7    6    5    4    3    2    1    
10   9    8    7    6    5    4    3    2    1    
10   9    8    7    6    5    4    3    2    1    
10   9    8    7    6    5    4    3    2    1    

Case 4:
Before:
1    -    -    -    -    -    -    -    -    -    
2    -    -    -    -    -    -    -    -    -    
3    -    -    -    -    -    -    -    -    -    
4    -    -    -    -    -    -    -    -    -    
5    -    -    -    -    -    -    -    -    -    
6    -    -    -    -    -    -    -    -    -    
7    -    -    -    -    -    -    -    -    -    
8    -    -    -    -    -    -    -    -    -    
9    -    -    -    -    -    -    -    -    -    
10   -    -    -    -    -    -    -    -    -    
Flip horizontal:
10   -    -    -    -    -    -    -    -    -    
9    -    -    -    -    -    -    -    -    -    
8    -    -    -    -    -    -    -    -    -    
7    -    -    -    -    -    -    -    -    -    
6    -    -    -    -    -    -    -    -    -    
5    -    -    -    -    -    -    -    -    -    
4    -    -    -    -    -    -    -    -    -    
3    -    -    -    -    -    -    -    -    -    
2    -    -    -    -    -    -    -    -    -    
1    -    -    -    -    -    -    -    -    -    
Flip vertical:
10   -    -    -    -    -    -    -    -    -    
9    -    -    -    -    -    -    -    -    -    
8    -    -    -    -    -    -    -    -    -    
7    -    -    -    -    -    -    -    -    -    
6    -    -    -    -    -    -    -    -    -    
5    -    -    -    -    -    -    -    -    -    
4    -    -    -    -    -    -    -    -    -    
3    -    -    -    -    -    -    -    -    -    
2    -    -    -    -    -    -    -    -    -    
1    -    -    -    -    -    -    -    -    -    

Case 5:
Before:
1    2    3    4    5    6    7    8    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
Flip horizontal:
1    2    3    4    5    6    7    8    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
Flip vertical:
8    7    6    5    4    3    2    1    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    

Case 6:
Before:
1    7    3    -    -    -    -    -    -    -    
7    4    8    -    -    -    -    -    -    -    
3    8    6    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
Flip horizontal:
3    8    6    -    -    -    -    -    -    -    
7    4    8    -    -    -    -    -    -    -    
1    7    3    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
Flip vertical:
6    8    3    -    -    -    -    -    -    -    
8    4    7    -    -    -    -    -    -    -    
3    7    1    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    
-    -    -    -    -    -    -    -    -    -    

End of Task 4 Testing

------------------------------
